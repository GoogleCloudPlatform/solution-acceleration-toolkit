{"additionalProperties":false,"properties":{"admins_group":{"description":"Group who will be given org admin access.","type":"string"},"billing_account":{"description":"ID of billing account to attach to this project.","type":"string"},"cicd":{"additionalProperties":false,"description":"Config for CICD. If unset there will be no CICD.","properties":{"apply_trigger":{"additionalProperties":false,"description":"            Config block for the postsubmit apply/deployyemt Cloud Build trigger. If specified,\n            create the trigger and grant the Cloud Build Service Account necessary permissions\n            to perform the build.\n","properties":{"disable":{"description":"                Whether or not to disable automatic triggering from a PR/push to branch. Default\n                to false.\n","type":"boolean"}},"type":"object"},"branch_regex":{"description":"Regex of the branches to set the Cloud Build Triggers to monitor.","type":"string"},"build_viewers":{"description":"IAM members to grant `cloudbuild.builds.viewer` role in the devops project to see CICD results.","items":{"type":"string"},"type":"array"},"cloud_source_repository":{"additionalProperties":false,"description":"Config for Google Cloud Source Repository Cloud Build triggers.","properties":{"name":{"description":"                Cloud Source Repository repo name.\n                The Cloud Source Repository should be hosted under the devops project.\n","type":"string"}},"type":"object"},"github":{"additionalProperties":false,"description":"Config for GitHub Cloud Build triggers.","properties":{"name":{"description":"GitHub repo name.","type":"string"},"owner":{"description":"GitHub repo owner.","type":"string"}},"type":"object"},"managed_services":{"description":"            APIs to enable in the devops project so the Cloud Build service account can manage\n            those services in other projects.\n","items":{"type":"string"},"type":"array"},"plan_trigger":{"additionalProperties":false,"description":"            Config block for the presubmit plan Cloud Build trigger. If specified, create\n            the trigger and grant the Cloud Build Service Account necessary permissions to perform\n            the build.\n","properties":{"disable":{"description":"                Whether or not to disable automatic triggering from a PR/push to branch. Default\n                to false.\n","type":"boolean"}},"type":"object"},"terraform_root":{"description":"Path of the directory relative to the repo root containing the Terraform configs.","type":"string"},"validate_trigger":{"additionalProperties":false,"description":"            Config block for the presubmit validation Cloud Build trigger. If specified, create\n            the trigger and grant the Cloud Build Service Account necessary permissions to perform\n            the build.\n","properties":{"disable":{"description":"                Whether or not to disable automatic triggering from a PR/push to branch. Default\n                to false.\n","type":"boolean"}},"type":"object"}},"required":["branch_regex"],"type":"object"},"enable_bootstrap_gcs_backend":{"description":"        Whether to enable GCS backend for the bootstrap deployment. Defaults to false.\n        Since the bootstrap deployment creates the state bucket, it cannot back the state\n        to the GCS bucket on the first deployment. Thus, this field should be set to true\n        after the bootstrap deployment has been applied. Then the user can run `terraform init`\n        in the bootstrapd deployment to transfer the state from local to GCS.\n","type":"boolean"},"enable_terragrunt":{"description":"        Whether to convert to a Terragrunt deployment. If set to \"false\", generate Terraform-only\n        configs and the CICD pipelines will only use Terraform. Default to \"true\".\n","type":"boolean"},"parent_id":{"description":"        ID of parent GCP resource to apply the policy: can be one of the organization ID,\n        folder ID according to parent_type.\n","pattern":"^[0-9]{8,25}$","type":"string"},"parent_type":{"description":"Type of parent GCP resource to apply the policy. Must be one of 'organization' or 'folder'.","pattern":"^organization|folder$","type":"string"},"project":{"additionalProperties":false,"description":"Config for the project to host devops related resources such as state bucket and CICD.","properties":{"owners":{"description":"            List of members to transfer ownership of the project to.\n            NOTE: By default the creating user will be the owner of the project.\n            Thus, there should be a group in this list and you must be part of that group,\n            so a group owns the project going forward.\n","items":{"type":"string"},"type":"array"},"project_id":{"description":"ID of project.","type":"string"}},"type":"object"},"state_bucket":{"description":"Name of Terraform remote state bucket.","type":"string"},"storage_location":{"description":"Location of state bucket.","type":"string"}},"title":"Devops Recipe"}
