# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{$BASE := "../../templates/tfengine/recipes"}}

data:
  ORG_ID: "123"
  BILLING_ACCOUNT: "000-000-000"

  # Default locations for resources. Can be overridden in individual templates.
  BIGQUERY_DATASET_LOCATION: "us-east1"
  CLOUD_SQL_INSTANCE_REGION: "us-central1"
  COMPUTE_INSTANCE_REGION: "us-central1"
  COMPUTE_NETWORK_REGION: "us-central1"
  GKE_CLUSTER_REGION: "us-central1"
  STORAGE_BUCKET_LOCATION: "us-central1"

  MASTER_AUTHORIZED_NETWORKS:
  - DISPLAY_NAME: "Office"
    CIDR_BLOCK: "192.0.2.0/24"

  # TODO: This block prevents certain parts of the configs from being generated
  # which require dependencies to be deployed first.
  #
  # 1. Follow the steps for each field in the block.
  # 2. Remove this block once nothing needs to be disabled.
  DISABLED:
    # The bootstrap module creates the Terraform state bucket and thus
    # its own state cannot be backed up until the state bucket has been created.
    #
    # 1. Deploy the bootstrap module. The state will be created locally in the same directory.
    # 2. Remove this field and run the engine.
    # 3. In the bootstrap module run `terraform init` to backup the bootstrap state to GCS.
    BOOTSTRAP_GCS_BACKEND: true

templates:
- name: "foundation"
  recipe_path: "{{$BASE}}/org/foundation.yaml"
  data:
    DEVOPS:
      PROJECT_ID: "example-devops"
      STATE_BUCKET: "example-state-bucket"
      ORG_ADMIN: "group:example-org-admin@example.com"
      PROJECT_OWNERS:
      - "group:example-devops-owners@example.com"
    AUDIT:
      PROJECT_ID: "example-audit"
      ENABLE_LIEN: true
      DATASET_NAME: "1yr_org_audit_logs"
      BUCKET_NAME: "7yr-org-audit-logs"
      AUDITORS: "group:example-dev-auditors@example.com"
    MONITOR:
      PROJECT_ID: "example-monitor"
      DOMAIN: "example.com"
    ORG_POLICIES: {} # Use default org policies.
    CICD:
      PROJECT_ID: "example-devops"
      STATE_BUCKET: "example-state-bucket"
      REPO_OWNER: "GoogleCloudPlatform"
      REPO_NAME: "example"
      BRANCH_REGEX: "master"
      CONTINUOUS_DEPLOYMENT_ENABLED: true
      TRIGGER_ENABLED: true
      BUILD_VIEWERS:
      - "group:example-cicd-viewers@example.com"
      MANAGED_SERVICES:
      - "sqladmin.googleapis.com"

- name: "folder-prod"
  recipe_path: "{{$BASE}}/org/folder.yaml"
  output_ref: "foundation.org_dir"
  data:
    DISPLAY_NAME: "prod"
- name: "folder-prod-team1"
  recipe_path: "{{$BASE}}/folder/folder.yaml"
  output_ref: "folder-prod.dir"
  data:
    DISPLAY_NAME: "team1"
- name: "project-example-prod-data"
  recipe_path: "{{$BASE}}/folder/project.yaml"
  output_ref: "folder-prod-team1.dir"
  data:
    PROJECT_ID: "example-prod-data"
    RESOURCES:
      STORAGE_BUCKETS:
      - NAME: "example-prod-bucket"
        IAM_MEMBERS:
        - ROLE: "roles/storage.objectViewer"
          MEMBER: "group:example-readers@example.com"
- name: "project-example-apps"
  recipe_path: "{{$BASE}}/folder/project.yaml"
  output_ref: "folder-prod-team1.dir"
  data:
    PROJECT_ID: "example-prod-apps"
    RESOURCES:
      GKE_CLUSTERS:
      - NAME: "example-prod-gke-cluster"
        NETWORK: "example-network"
        SUBNET: "example-subnet"
        IP_RANGE_PODS_NAME: "example-pods-range"
        IP_RANGE_SERVICES_NAME: "example-services-range"
        MASTER_IPV4_CIDR_BLOCK: "192.168.0.0/28"
